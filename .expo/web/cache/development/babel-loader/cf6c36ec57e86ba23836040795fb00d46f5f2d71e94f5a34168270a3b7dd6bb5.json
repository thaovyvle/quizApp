{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Text } from '@rneui/themed';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    firstname = _useState2[0],\n    setFirstname = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    lastname = _useState4[0],\n    setLastname = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    username = _useState6[0],\n    setUsername = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    phonenumber = _useState8[0],\n    setPhone = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    password = _useState10[0],\n    setPassword = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    confirmpassword = _useState12[0],\n    setConfirmpassword = _useState12[1];\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    email = _useState14[0],\n    setEmail = _useState14[1];\n  var _useState15 = useState(''),\n    _useState16 = _slicedToArray(_useState15, 2),\n    zip = _useState16[0],\n    setZip = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    isSelected = _useState18[0],\n    setSelection = _useState18[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    checkFName = _useState20[0],\n    setCheckFName = _useState20[1];\n  var handleFName = function handleFName(e) {\n    var regex = /^[^\\d=?\\\\/@#%^&*()]+$/;\n    setFirstname(e);\n    if (regex.test(e)) {\n      setCheckFName(false);\n    } else {\n      setCheckFName(true);\n    }\n  };\n  var _useState21 = useState(false),\n    _useState22 = _slicedToArray(_useState21, 2),\n    checkLName = _useState22[0],\n    setCheckLName = _useState22[1];\n  var handleLName = function handleLName(e) {\n    var regex = /^[^\\d=?\\\\/@#%^&*()]+$/;\n    setLastname(e);\n    if (regex.test(e)) {\n      setCheckLName(false);\n    } else {\n      setCheckLName(true);\n    }\n  };\n  var _useState23 = useState(false),\n    _useState24 = _slicedToArray(_useState23, 2),\n    checkPhone = _useState24[0],\n    setCheckPhone = _useState24[1];\n  var formatPhoneNumber = function formatPhoneNumber(value) {\n    if (!value) return value;\n    var phoneNumber = value.replace(/[^\\d]/g, \"\");\n    var phoneNumberLength = phoneNumber.length;\n    if (phoneNumberLength < 4) return phoneNumber;\n    if (phoneNumberLength < 7) {\n      return \"(\" + phoneNumber.slice(0, 3) + \") \" + phoneNumber.slice(3);\n    }\n    setCheckPhone(false);\n    return \"(\" + phoneNumber.slice(0, 3) + \") \" + phoneNumber.slice(3, 6) + \"-\" + phoneNumber.slice(6, 10);\n  };\n  var handlePhone = function handlePhone(e) {\n    setCheckPhone(true);\n    var formattedPhoneNumber = formatPhoneNumber(e.target.value);\n    setPhone(formattedPhoneNumber);\n  };\n  var _useState25 = useState(false),\n    _useState26 = _slicedToArray(_useState25, 2),\n    checkUpper = _useState26[0],\n    setCheckUpper = _useState26[1];\n  var _useState27 = useState(false),\n    _useState28 = _slicedToArray(_useState27, 2),\n    checkLower = _useState28[0],\n    setCheckLower = _useState28[1];\n  var _useState29 = useState(false),\n    _useState30 = _slicedToArray(_useState29, 2),\n    checkNum = _useState30[0],\n    setCheckNum = _useState30[1];\n  var _useState31 = useState(false),\n    _useState32 = _slicedToArray(_useState31, 2),\n    checkNonAlphaNum = _useState32[0],\n    setCheckNonAlphaNum = _useState32[1];\n  var handlePassword = function handlePassword(e) {\n    var containsUppercase = /^(?=.*[A-Z]).*$/;\n    var containsLowercase = /^(?=.*[a-z]).*$/;\n    var containsNumber = /^(?=.*[0-9]).*$/;\n    var containsNonAlphaNum = /^(?=.*[^a-zA-Z0-9]).*$/;\n    setPassword(e);\n    setCheckUpper(true);\n    setCheckLower(true);\n    setCheckNum(true);\n    setCheckNonAlphaNum(true);\n    if (containsUppercase.test(e) && containsLowercase.test(e) && containsNumber.test(e) && containsNonAlphaNum.test(e)) {\n      setCheckUpper(false);\n      setCheckLower(false);\n      setCheckNum(false);\n      setCheckNonAlphaNum(false);\n    } else if (!containsUppercase.test(e) && containsLowercase.test(e) && containsNumber.test(e) && containsNonAlphaNum.test(e)) {\n      setCheckUpper(true);\n      setCheckLower(false);\n      setCheckNum(false);\n      setCheckNonAlphaNum(false);\n    } else if (containsUppercase.test(e) && !containsLowercase.test(e) && containsNumber.test(e) && containsNonAlphaNum.test(e)) {\n      setCheckUpper(false);\n      setCheckLower(true);\n      setCheckNum(false);\n      setCheckNonAlphaNum(false);\n    } else if (containsUppercase.test(e) && containsLowercase.test(e) && !containsNumber.test(e) && containsNonAlphaNum.test(e)) {\n      setCheckUpper(false);\n      setCheckLower(false);\n      setCheckNum(true);\n      setCheckNonAlphaNum(false);\n    } else if (containsUppercase.test(e) && containsLowercase.test(e) && containsNumber.test(e) && !containsNonAlphaNum.test(e)) {\n      setCheckUpper(false);\n      setCheckLower(false);\n      setCheckNum(false);\n      setCheckNonAlphaNum(true);\n    }\n  };\n  var _useState33 = useState(false),\n    _useState34 = _slicedToArray(_useState33, 2),\n    checkConfirmPass = _useState34[0],\n    setCheckConfirmPass = _useState34[1];\n  var handleConfirmPass = function handleConfirmPass(e) {\n    setConfirmpassword(e);\n    if (password === e) {\n      setCheckConfirmPass(false);\n    } else {\n      setCheckConfirmPass(true);\n    }\n  };\n  var _useState35 = useState(false),\n    _useState36 = _slicedToArray(_useState35, 2),\n    checkEmail = _useState36[0],\n    setCheckEmail = _useState36[1];\n  var handleEmail = function handleEmail(e) {\n    var regex = /[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+\\.[a-zA-Z]/;\n    setEmail(e);\n    if (regex.test(e)) {\n      setCheckEmail(false);\n    } else {\n      setCheckEmail(true);\n    }\n  };\n  var _useState37 = useState(false),\n    _useState38 = _slicedToArray(_useState37, 2),\n    checkZip = _useState38[0],\n    setCheckZip = _useState38[1];\n  var handleZip = function handleZip(e) {\n    var regex = /^\\d{5}$/;\n    setZip(e);\n    if (regex.test(e)) {\n      setCheckZip(false);\n      checkReg(false);\n    } else {\n      setCheckZip(true);\n    }\n  };\n  var _useState39 = useState(true),\n    _useState40 = _slicedToArray(_useState39, 2),\n    reg = _useState40[0],\n    checkReg = _useState40[1];\n  var checkRegistration = function checkRegistration() {\n    if (!reg && !checkFName && !checkLName && !checkPhone && !checkUpper && !checkLower && !checkNum && !checkNonAlphaNum && !checkConfirmPass && !checkEmail && !checkZip) {\n      navigation.navigate(\"Home\");\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.titleText,\n      children: \"Register Now\"\n    }), reg ? _jsx(Text, {\n      style: styles.regText,\n      children: \"Please Fill Out Entire Form to Continue\"\n    }) : _jsx(Text, {}), _jsx(View, {\n      style: styles.loginContainer,\n      children: _jsx(TextInput, {\n        style: styles.input,\n        testID: \"firstname\",\n        placeholder: \"First Name\",\n        value: firstname,\n        onChangeText: function onChangeText(text) {\n          return handleFName(text);\n        }\n      })\n    }), checkFName ? _jsx(Text, {\n      style: styles.errorText,\n      children: \"Error: Can only include letters & symbols, no numbers\"\n    }) : _jsx(Text, {}), _jsx(View, {\n      style: styles.loginContainer,\n      children: _jsx(TextInput, {\n        style: styles.input,\n        testID: \"lastname\",\n        placeholder: \"Last Name\",\n        value: lastname,\n        onChangeText: function onChangeText(text) {\n          return handleLName(text);\n        }\n      })\n    }), checkLName ? _jsx(Text, {\n      style: styles.errorText,\n      children: \"Error: Can only include letters & symbols, no numbers\"\n    }) : _jsx(Text, {}), _jsx(View, {\n      style: styles.loginContainer,\n      children: _jsx(TextInput, {\n        style: styles.input,\n        testID: \"username\",\n        placeholder: \"Username\",\n        value: username,\n        onChangeText: function onChangeText(text) {\n          return setUsername(text);\n        }\n      })\n    }), _jsx(View, {\n      style: styles.loginContainer,\n      children: _jsx(TextInput, {\n        style: styles.input,\n        testID: \"phonenumber\",\n        placeholder: \"Phone Number\",\n        value: phonenumber,\n        onChange: function onChange(text) {\n          return handlePhone(text);\n        }\n      })\n    }), checkPhone ? _jsx(Text, {\n      style: styles.errorText,\n      children: \"Error: Must be in (xxx) xxx-xxxx format\"\n    }) : _jsx(Text, {}), _jsx(View, {\n      style: styles.loginContainer,\n      children: _jsx(TextInput, {\n        style: styles.input,\n        testID: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          return handlePassword(text);\n        }\n      })\n    }), checkUpper ? _jsx(Text, {\n      style: styles.errorText,\n      children: \"Password must have at least one Uppercase Character\"\n    }) : _jsx(Text, {}), checkLower ? _jsx(Text, {\n      style: styles.errorText,\n      children: \"Password must have at least one Lowercase Character\"\n    }) : _jsx(Text, {}), checkNum ? _jsx(Text, {\n      style: styles.errorText,\n      children: \"Password must contain at least one Number\"\n    }) : _jsx(Text, {}), checkNonAlphaNum ? _jsx(Text, {\n      style: styles.errorText,\n      children: \"Password must contain at least one Non-Alpha Numeric Character\"\n    }) : _jsx(Text, {}), _jsx(View, {\n      style: styles.loginContainer,\n      children: _jsx(TextInput, {\n        style: styles.input,\n        testID: \"confirmpassword\",\n        placeholder: \"Confirm Password\",\n        secureTextEntry: true,\n        value: confirmpassword,\n        onChangeText: function onChangeText(text) {\n          return handleConfirmPass(text);\n        }\n      })\n    }), checkConfirmPass ? _jsx(Text, {\n      style: styles.errorText,\n      children: \"Does not match password entered\"\n    }) : _jsx(Text, {}), _jsx(View, {\n      style: styles.loginContainer,\n      children: _jsx(TextInput, {\n        style: styles.input,\n        testID: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return handleEmail(text);\n        }\n      })\n    }), checkEmail ? _jsx(Text, {\n      style: styles.errorText,\n      children: \"Error: Email must contain @ and '.'\"\n    }) : _jsx(Text, {}), _jsx(View, {\n      style: styles.loginContainer,\n      children: _jsx(TextInput, {\n        style: styles.input,\n        testID: \"zip\",\n        placeholder: \"ZIP Code\",\n        value: zip,\n        onChangeText: function onChangeText(text) {\n          return handleZip(text);\n        }\n      })\n    }), checkZip ? _jsx(Text, {\n      style: styles.errorText,\n      children: \"Error: Must include 5 digits (US Zip codes)\"\n    }) : _jsx(Text, {}), _jsx(View, {\n      style: styles.buttonContainer,\n      children: _jsx(Button, {\n        color: \"#F9BD58\",\n        title: \"Register\",\n        onPress: function onPress() {\n          return checkRegistration();\n        }\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","StyleSheet","View","Button","TextInput","Text","NavigationContainer","createNativeStackNavigator","jsx","_jsx","jsxs","_jsxs","Stack","RegisterScreen","_ref","navigation","_useState","_useState2","_slicedToArray","firstname","setFirstname","_useState3","_useState4","lastname","setLastname","_useState5","_useState6","username","setUsername","_useState7","_useState8","phonenumber","setPhone","_useState9","_useState10","password","setPassword","_useState11","_useState12","confirmpassword","setConfirmpassword","_useState13","_useState14","email","setEmail","_useState15","_useState16","zip","setZip","_useState17","_useState18","isSelected","setSelection","_useState19","_useState20","checkFName","setCheckFName","handleFName","e","regex","test","_useState21","_useState22","checkLName","setCheckLName","handleLName","_useState23","_useState24","checkPhone","setCheckPhone","formatPhoneNumber","value","phoneNumber","replace","phoneNumberLength","length","slice","handlePhone","formattedPhoneNumber","target","_useState25","_useState26","checkUpper","setCheckUpper","_useState27","_useState28","checkLower","setCheckLower","_useState29","_useState30","checkNum","setCheckNum","_useState31","_useState32","checkNonAlphaNum","setCheckNonAlphaNum","handlePassword","containsUppercase","containsLowercase","containsNumber","containsNonAlphaNum","_useState33","_useState34","checkConfirmPass","setCheckConfirmPass","handleConfirmPass","_useState35","_useState36","checkEmail","setCheckEmail","handleEmail","_useState37","_useState38","checkZip","setCheckZip","handleZip","checkReg","_useState39","_useState40","reg","checkRegistration","navigate","style","styles","container","children","titleText","regText","loginContainer","input","testID","placeholder","onChangeText","text","errorText","onChange","secureTextEntry","buttonContainer","color","title","onPress"],"sources":["/Users/thaovy/github-classroom/UCF-GaiM/dig4639-s23-main-thaovyvle/unit2/portfolio/Components/register.js"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport { StyleSheet, View, Button, TextInput } from 'react-native';\nimport { Text } from '@rneui/themed'\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nconst Stack = createNativeStackNavigator()\n\nexport default function RegisterScreen({navigation}) {\n    const [firstname, setFirstname] = useState('')\n    const [lastname, setLastname] = useState('')\n    const [username, setUsername] = useState('')\n    const [phonenumber, setPhone] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmpassword, setConfirmpassword] = useState('')\n    const [email, setEmail] = useState('')\n    const [zip, setZip] = useState('')\n    const [isSelected, setSelection] = useState(false);\n\n    // Validate First Name \n    const [checkFName, setCheckFName] = useState(false)\n\n    const handleFName = (e) => {\n        let regex = /^[^\\d=?\\\\/@#%^&*()]+$/\n        setFirstname(e)\n        if (regex.test(e)) {\n            setCheckFName(false)\n        } else {\n            setCheckFName(true)\n        }\n    }\n\n    // Validate Last Name \n    const [checkLName, setCheckLName] = useState(false)\n\n    const handleLName = (e) => {\n        let regex = /^[^\\d=?\\\\/@#%^&*()]+$/\n        setLastname(e)\n        if (regex.test(e)) {\n            setCheckLName(false)\n        } else {\n            setCheckLName(true)\n        }\n    }\n\n    // Validate Phone Number\n    const [checkPhone, setCheckPhone] = useState(false)\n    const formatPhoneNumber = (value) => {\n        if (!value) return value;\n        const phoneNumber = value.replace(/[^\\d]/g, \"\");\n        const phoneNumberLength = phoneNumber.length;\n        if (phoneNumberLength < 4) return phoneNumber;\n\n        if (phoneNumberLength < 7) {\n            return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3)}`;\n        }\n\n        setCheckPhone(false)\n        return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3,6)}-${phoneNumber.slice(6, 10)}`;\n    }\n    const handlePhone = (e) => {\n        setCheckPhone(true)\n        const formattedPhoneNumber = formatPhoneNumber(e.target.value);\n        setPhone(formattedPhoneNumber);\n    };\n\n    // Validate Password \n    const [checkUpper, setCheckUpper] = useState(false)\n    const [checkLower, setCheckLower] = useState(false)\n    const [checkNum, setCheckNum] = useState(false)\n    const [checkNonAlphaNum, setCheckNonAlphaNum] = useState(false)\n    const handlePassword = (e) => {\n        const containsUppercase = /^(?=.*[A-Z]).*$/\n        const containsLowercase = /^(?=.*[a-z]).*$/\n        const containsNumber = /^(?=.*[0-9]).*$/\n        const containsNonAlphaNum = /^(?=.*[^a-zA-Z0-9]).*$/\n        setPassword(e)\n        setCheckUpper(true)\n        setCheckLower(true)\n        setCheckNum(true)\n        setCheckNonAlphaNum(true)\n        if (containsUppercase.test(e) && containsLowercase.test(e) && containsNumber.test(e) && containsNonAlphaNum.test(e)) {\n            setCheckUpper(false)\n            setCheckLower(false)\n            setCheckNum(false)\n            setCheckNonAlphaNum(false)\n        } else if (!containsUppercase.test(e) && containsLowercase.test(e) && containsNumber.test(e) && containsNonAlphaNum.test(e)) {\n            setCheckUpper(true)\n            setCheckLower(false)\n            setCheckNum(false)\n            setCheckNonAlphaNum(false)\n        } else if (containsUppercase.test(e) && !containsLowercase.test(e) && containsNumber.test(e) && containsNonAlphaNum.test(e)) {\n            setCheckUpper(false)\n            setCheckLower(true)\n            setCheckNum(false)\n            setCheckNonAlphaNum(false)\n        } else if (containsUppercase.test(e) && containsLowercase.test(e) && !containsNumber.test(e) && containsNonAlphaNum.test(e)) {\n            setCheckUpper(false)\n            setCheckLower(false)\n            setCheckNum(true)\n            setCheckNonAlphaNum(false)\n        } else if (containsUppercase.test(e) && containsLowercase.test(e) && containsNumber.test(e) && !containsNonAlphaNum.test(e)) {\n            setCheckUpper(false)\n            setCheckLower(false)\n            setCheckNum(false)\n            setCheckNonAlphaNum(true)\n        } \n    }\n\n    // Validate Confirm Password\n    const [checkConfirmPass, setCheckConfirmPass] = useState(false)\n    const handleConfirmPass = (e) => {\n        setConfirmpassword(e)\n        if (password === e) {\n            setCheckConfirmPass(false)\n        } else {\n            setCheckConfirmPass(true)\n        }\n    }\n\n    // Validate Email\n    const [checkEmail, setCheckEmail] = useState(false)\n\n    const handleEmail = (e) => {\n        let regex = /[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+\\.[a-zA-Z]/\n        setEmail(e)\n        if (regex.test(e)) {\n            setCheckEmail(false)\n        } else {\n            setCheckEmail(true)\n        }\n    }\n\n    // Validate Zip Code\n    const [checkZip, setCheckZip] = useState(false)\n\n    const handleZip = (e) => {\n        let regex = /^\\d{5}$/\n        setZip(e)\n        if (regex.test(e)) {\n            setCheckZip(false)\n            checkReg(false)\n        } else {\n            setCheckZip(true)\n        }\n    }\n\n    const [reg, checkReg] = useState(true)\n    const checkRegistration = () => {\n        if (!reg && !checkFName && !checkLName && !checkPhone && !checkUpper && !checkLower && !checkNum && !checkNonAlphaNum && !checkConfirmPass && !checkEmail && !checkZip) {\n            navigation.navigate(\"Home\")\n        } \n    }\n\n\n    return (\n    <View style={styles.container}>\n      <Text style={styles.titleText}>Register Now</Text>\n      {reg? (\n        <Text style={styles.regText}>Please Fill Out Entire Form to Continue</Text> ) : ( <Text></Text>)\n      }\n      <View style={styles.loginContainer}>\n          <TextInput style={styles.input} testID=\"firstname\" placeholder='First Name' value={firstname} onChangeText={text=>handleFName(text)}/>\n      </View>\n      {checkFName? (\n        <Text style={styles.errorText}>Error: Can only include letters & symbols, no numbers</Text> ) : ( <Text></Text>)\n      }\n      <View style={styles.loginContainer}>\n          <TextInput style={styles.input} testID=\"lastname\" placeholder='Last Name' value={lastname} onChangeText={text=>handleLName(text)}/>\n      </View>\n      {checkLName? (\n        <Text style={styles.errorText}>Error: Can only include letters & symbols, no numbers</Text> ) : ( <Text></Text>)\n      }\n      <View style={styles.loginContainer}>\n          <TextInput style={styles.input} testID=\"username\" placeholder='Username' value={username} onChangeText={text=>setUsername(text)}/>\n      </View>\n      <View style={styles.loginContainer}>\n          <TextInput style={styles.input} testID=\"phonenumber\" placeholder='Phone Number' value={phonenumber} onChange={text=>handlePhone(text)}/>\n      </View>\n      {checkPhone? (\n        <Text style={styles.errorText}>Error: Must be in (xxx) xxx-xxxx format</Text> ) : ( <Text></Text>)\n      }\n      <View style={styles.loginContainer}>\n          <TextInput style={styles.input} testID=\"password\" placeholder='Password' value={password} secureTextEntry onChangeText={text=>handlePassword(text)}/>\n      </View>\n      {checkUpper? (\n        <Text style={styles.errorText}>Password must have at least one Uppercase Character</Text> ) : ( <Text></Text>)\n      }\n      {checkLower? (\n        <Text style={styles.errorText}>Password must have at least one Lowercase Character</Text> ) : ( <Text></Text>)\n      }\n      {checkNum? (\n        <Text style={styles.errorText}>Password must contain at least one Number</Text> ) : ( <Text></Text>)\n      }\n      {checkNonAlphaNum? (\n        <Text style={styles.errorText}>Password must contain at least one Non-Alpha Numeric Character</Text> ) : ( <Text></Text>)\n      }\n      <View style={styles.loginContainer}>\n          <TextInput style={styles.input} testID=\"confirmpassword\" placeholder='Confirm Password' secureTextEntry value={confirmpassword} onChangeText={text=>handleConfirmPass(text)}/>\n      </View>\n      {checkConfirmPass? (\n        <Text style={styles.errorText}>Does not match password entered</Text> ) : ( <Text></Text>)\n      }\n      <View style={styles.loginContainer}>\n          <TextInput style={styles.input} testID=\"email\" placeholder='Email' value={email} onChangeText={text=>handleEmail(text)}/>\n      </View>\n      {checkEmail? (\n        <Text style={styles.errorText}>Error: Email must contain @ and '.'</Text> ) : ( <Text></Text>)\n      }\n      <View style={styles.loginContainer}>\n          <TextInput style={styles.input} testID=\"zip\" placeholder='ZIP Code' value={zip} onChangeText={text=>handleZip(text)}/>\n      </View>\n      {checkZip? (\n        <Text style={styles.errorText}>Error: Must include 5 digits (US Zip codes)</Text> ) : ( <Text></Text>)\n      }\n      <View style={styles.buttonContainer}>\n        <Button color=\"#F9BD58\" title=\"Register\" onPress={()=> checkRegistration()}/>\n      </View>\n    </View>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}