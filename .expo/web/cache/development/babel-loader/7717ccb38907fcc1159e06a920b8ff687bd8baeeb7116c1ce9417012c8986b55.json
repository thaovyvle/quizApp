{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text, ButtonGroup } from '@rneui/themed';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function QuizScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var questions = route.params.questions;\n  var index = route.params.index;\n  var type = route.params.type;\n  var quizNum = route.params.quizNum;\n  var qNum = index;\n  var ItemSeparatorView = function ItemSeparatorView() {\n    return _jsx(View, {\n      style: {\n        height: 20,\n        width: '100%',\n        backgroundColor: '#14151F'\n      }\n    });\n  };\n  var renderButtons = function renderButtons(_ref2) {\n    var item = _ref2.item;\n    return _jsx(Button, {\n      color: item === selectedItem ? \"#353D5C\" : \"#6A89FE\",\n      title: item,\n      onPress: function onPress() {\n        setSelected(item);\n        setColor(true);\n      }\n    });\n  };\n  var nextScreen = function nextScreen() {\n    if (index != 2) {\n      navigation.navigate(\"Quiz\", {\n        questions: questions,\n        index: ++index\n      });\n    } else if (index === 2) {\n      userAnswers[2] = selectedIndex;\n      navigation.navigate(\"Summary\", {\n        questions: questions,\n        a1: userAnswers[0],\n        a2: userAnswers[1],\n        a3: userAnswers[2]\n      });\n    }\n  };\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedIndex = _useState2[0],\n    setSelectedIndex = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userAnswers = _useState4[0],\n    setUserAnswers = _useState4[1];\n  console.log({\n    userAnswers: userAnswers\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.titleText,\n      children: \"Quiz \"\n    }), _jsxs(Text, {\n      style: styles.introText,\n      children: [\"Question #\", ++qNum]\n    }), _jsx(Text, {\n      style: styles.qText,\n      children: questions[index].prompt\n    }), _jsx(ButtonGroup, {\n      buttons: questions[index].choices,\n      vertical: true,\n      selectedIndex: selectedIndex,\n      onPress: function onPress(value) {\n        setSelectedIndex(value);\n      },\n      buttonStyle: {\n        width: 200\n      },\n      buttonContainerStyle: {\n        backgroundColor: \"white\",\n        height: 50\n      },\n      selectedButtonStyle: {\n        backgroundColor: \"#6A89FE\"\n      },\n      containerStyle: {\n        marginBottom: 30\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        setUserAnswers([].concat(_toConsumableArray(userAnswers), [selectedIndex])), setSelectedIndex(), nextScreen();\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Next\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#14151F',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  titleText: {\n    fontSize: 60,\n    color: \"white\",\n    fontWeight: 'bold',\n    padding: 15\n  },\n  introText: {\n    fontSize: 18,\n    paddingTop: 10,\n    color: \"#6A89FE\"\n  },\n  button: {\n    backgroundColor: \"white\",\n    padding: 15,\n    paddingHorizontal: 50,\n    borderRadius: 8,\n    marginBottom: 100\n  },\n  buttonText: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"#6A89FE\"\n  },\n  qText: {\n    fontSize: 22,\n    padding: 30,\n    color: \"white\",\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","View","Button","TouchableOpacity","Text","ButtonGroup","NavigationContainer","createNativeStackNavigator","jsx","_jsx","jsxs","_jsxs","Stack","QuizScreen","_ref","navigation","route","questions","params","index","type","quizNum","qNum","ItemSeparatorView","style","height","width","backgroundColor","renderButtons","_ref2","item","color","selectedItem","title","onPress","setSelected","setColor","nextScreen","navigate","userAnswers","selectedIndex","a1","a2","a3","_useState","_useState2","_slicedToArray","setSelectedIndex","_useState3","_useState4","setUserAnswers","console","log","styles","container","children","titleText","introText","qText","prompt","buttons","choices","vertical","value","buttonStyle","buttonContainerStyle","selectedButtonStyle","containerStyle","marginBottom","button","concat","_toConsumableArray","buttonText","create","flex","alignItems","justifyContent","fontSize","fontWeight","padding","paddingTop","paddingHorizontal","borderRadius"],"sources":["/Users/thaovy/github-classroom/UCF-GaiM/dig4639-s23-main-thaovyvle/unit2/portfolio/Components/quiz.js"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport { StyleSheet, View, Button, TouchableOpacity } from 'react-native';\nimport { Text, ButtonGroup } from '@rneui/themed'\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nconst Stack = createNativeStackNavigator()\n\nexport default function QuizScreen({navigation, route}) {\n    let questions = route.params.questions\n    let index = route.params.index\n    let type = route.params.type\n    let quizNum = route.params.quizNum\n    let qNum = index\n\n    const ItemSeparatorView = () => {\n        return (\n            <View style={{ height: 20, width: '100%', backgroundColor: '#14151F' }}/>\n        )\n    }\n    const renderButtons = ( {item} ) => {\n        return (\n            <Button color={item === selectedItem? \"#353D5C\" : \"#6A89FE\"} title={item} onPress={()=> {\n                setSelected(item)\n                setColor(true)\n            }}></Button>\n        )\n    }\n\n    const nextScreen = () => {\n        if (index != 2) {\n            navigation.navigate(\"Quiz\", {questions: questions, index: ++index})\n        } else if (index === 2) {\n            userAnswers[2] = selectedIndex\n            navigation.navigate(\"Summary\", {questions: questions, a1: userAnswers[0], a2: userAnswers[1], a3: userAnswers[2]})\n        }\n    }\n    const [selectedIndex, setSelectedIndex] = useState();\n    const [userAnswers, setUserAnswers] = useState([]);\n    console.log({userAnswers})\n    return (\n        <View style={styles.container}>\n            <Text style={styles.titleText}>Quiz </Text>\n            <Text style={styles.introText}>Question #{++qNum}</Text>\n            <Text style={styles.qText}>{questions[index].prompt}</Text>\n            <ButtonGroup\n                buttons={questions[index].choices}\n                vertical \n                selectedIndex={selectedIndex}\n                onPress={(value) => {\n                    setSelectedIndex(value);\n                }}\n                buttonStyle={{ width: 200 }}\n                buttonContainerStyle={{ backgroundColor: \"white\", height: 50 }}\n                selectedButtonStyle={{ backgroundColor: \"#6A89FE\" }}\n                containerStyle={{marginBottom: 30}}\n            />\n            <TouchableOpacity style={styles.button} onPress={() => {setUserAnswers([...userAnswers, selectedIndex]), setSelectedIndex(), nextScreen()}}>\n                <Text style={styles.buttonText}>Next</Text>\n            </TouchableOpacity>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#14151F',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  titleText: {\n    fontSize: 60,\n    color: \"white\",\n    fontWeight: 'bold',\n    padding: 15\n  },\n  introText: {\n    fontSize: 18,\n    paddingTop: 10,\n    color: \"#6A89FE\"\n  },\n  button: {\n    backgroundColor: \"white\",\n    padding: 15,\n    paddingHorizontal: 50,\n    borderRadius: 8,\n    marginBottom: 100\n  },\n  buttonText: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"#6A89FE\"\n  },\n  qText: {\n    fontSize: 22,\n    padding: 30,\n    color: \"white\",\n    fontWeight: \"bold\"\n  }\n});\n\n// <FlatList data={questions[index].choices} ItemSeparatorComponent={ItemSeparatorView} renderItem={renderButtons} />\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}