{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Text } from '@rneui/themed';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function SummaryScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var questions = route.params.questions;\n  var a1 = route.params.a1;\n  var a2 = route.params.a2;\n  var a3 = route.params.a3;\n  var type = route.params.type;\n  var qNum = 0;\n  var points = 0;\n  var renderAnswers = function renderAnswers(_ref2) {\n    var item = _ref2.item;\n    qNum++;\n    var correctAns = item.correct;\n    var correctAns2;\n    var userAnswer;\n    if (type === 0) {\n      if (qNum === 1) {\n        userAnswer = a1;\n        if (correctAns === userAnswer) {\n          points++;\n        }\n      } else if (qNum === 2) {\n        userAnswer = a2;\n        if (correctAns === userAnswer) {\n          points++;\n        }\n      } else if (qNum === 3) {\n        userAnswer = a3;\n        if (correctAns === userAnswer) {\n          points++;\n        }\n      }\n    }\n    if (qNum === 1) {\n      userAnswer = a1;\n      if (correctAns === userAnswer) {\n        points++;\n      }\n    } else if (qNum === 2) {\n      correctAns = item.correct[0];\n      correctAns2 = item.correct[1];\n      userAnswer = a2;\n      if (correctAns === userAnswer || correctAns2 === userAnswer) {\n        points++;\n      }\n    } else if (qNum === 3) {\n      userAnswer = a3;\n      if (correctAns === userAnswer) {\n        points++;\n      }\n    }\n    return _jsxs(_Fragment, {\n      children: [_jsxs(Text, {\n        style: styles.introText,\n        children: [\"#\", qNum, \" \", item.prompt]\n      }), item.choices.map(function (q, index) {\n        var answerNum = index;\n        if (qNum === 2) {\n          return _jsxs(Text, {\n            style: {\n              fontSize: 18,\n              paddingTop: 5,\n              color: \"white\",\n              textDecorationLine: index != item.correct[0] && index != item.correct[1] ? \"line-through\" : \"none\",\n              textDecorationStyle: 'solid',\n              textDecorationColor: 'red'\n            },\n            children: [++answerNum, \". \", q]\n          });\n        }\n        return _jsxs(Text, {\n          style: {\n            fontSize: 18,\n            paddingTop: 5,\n            color: \"white\",\n            textDecorationLine: index != item.correct ? \"line-through\" : \"none\",\n            textDecorationStyle: 'solid',\n            textDecorationColor: 'red'\n          },\n          children: [++answerNum, \". \", q]\n        });\n      }), _jsx(View, {\n        style: styles.ansText,\n        children: _jsx(Text, {\n          style: styles.ansText,\n          children: qNum != 2 ? \"Correct Answer: \" + ++correctAns : \"Correct Answer: \" + ++correctAns + \" or \" + ++correctAns2\n        })\n      }), _jsx(View, {\n        style: styles.ansText,\n        children: _jsxs(Text, {\n          style: styles.ansText,\n          children: [\"You Answered: \", ++userAnswer]\n        })\n      }), _jsx(View, {\n        style: styles.ansText,\n        children: _jsx(Text, {\n          style: {\n            fontSize: 20,\n            paddingTop: 10,\n            fontWeight: \"bold\",\n            color: correctAns === userAnswer || correctAns2 === userAnswer ? \"#359c52\" : \"#fc0330\"\n          },\n          children: correctAns === userAnswer || correctAns2 === userAnswer ? \"Correct! - 1/1 Points\" : \"Incorrect - 0/1 Points\"\n        })\n      }), _jsx(View, {\n        style: styles.container,\n        children: _jsx(Text, {\n          style: styles.scoreText,\n          children: qNum === 3 ? \"Quiz Score: \" + points + \"/3\" : ''\n        })\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.appContainer,\n    children: [_jsx(Text, {\n      style: styles.titleText,\n      children: \"Summary\"\n    }), _jsx(FlatList, {\n      data: questions,\n      renderItem: renderAnswers\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  appContainer: {\n    flex: 1,\n    backgroundColor: '#14151F',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#14151F',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  titleText: {\n    fontSize: 50,\n    color: \"white\",\n    fontWeight: 'bold',\n    padding: 15\n  },\n  introText: {\n    fontSize: 20,\n    paddingTop: 10,\n    color: \"#6A89FE\"\n  },\n  qText: {\n    fontSize: 18,\n    paddingTop: 5,\n    color: \"white\"\n  },\n  ansText: {\n    fontSize: 16,\n    color: \"white\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    paddingTop: 3\n  },\n  correctText: {\n    fontSize: 20,\n    paddingTop: 10,\n    fontWeight: \"bold\",\n    color: \"white\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\"\n  },\n  scoreText: {\n    fontSize: 50,\n    color: \"#6A89FE\",\n    fontWeight: 'bold',\n    padding: 30\n  }\n});","map":{"version":3,"names":["React","StyleSheet","View","FlatList","Text","NavigationContainer","createNativeStackNavigator","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","Stack","SummaryScreen","_ref","navigation","route","questions","params","a1","a2","a3","type","qNum","points","renderAnswers","_ref2","item","correctAns","correct","correctAns2","userAnswer","children","style","styles","introText","prompt","choices","map","q","index","answerNum","fontSize","paddingTop","color","textDecorationLine","textDecorationStyle","textDecorationColor","ansText","fontWeight","container","scoreText","appContainer","titleText","data","renderItem","create","flex","backgroundColor","alignItems","justifyContent","padding","qText","flexDirection","correctText"],"sources":["/Users/thaovy/github-classroom/UCF-GaiM/dig4639-s23-main-thaovyvle/unit2/portfolio/Components/summary.js"],"sourcesContent":["import React from 'react'\nimport { StyleSheet, View, FlatList } from 'react-native';\nimport { Text } from '@rneui/themed'\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nconst Stack = createNativeStackNavigator()\n\nexport default function SummaryScreen({navigation, route}) {\n    let questions = route.params.questions\n    let a1 = route.params.a1\n    let a2 = route.params.a2\n    let a3 = route.params.a3\n    let type = route.params.type\n    let qNum = 0\n    let points = 0\n\n    const renderAnswers = ( {item} ) => {\n        qNum++\n        let correctAns = item.correct\n        let correctAns2 \n        let userAnswer\n        if (type === 0) {\n            if (qNum === 1) {\n                userAnswer = a1\n                if (correctAns === userAnswer) {\n                    points++\n                }\n            } else if (qNum === 2) {\n                userAnswer = a2\n                if (correctAns === userAnswer) {\n                    points++\n                }\n            } else if (qNum === 3) {\n                userAnswer = a3\n                if (correctAns === userAnswer) {\n                    points++\n                }\n        }  \n        }\n        if (qNum === 1) {\n            userAnswer = a1\n            if (correctAns === userAnswer) {\n                points++\n            }\n        } else if (qNum === 2) {\n            correctAns = item.correct[0]\n            correctAns2 = item.correct[1]\n            userAnswer = a2\n            if (correctAns === userAnswer || correctAns2 === userAnswer) {\n                points++\n            }\n        } else if (qNum === 3) {\n            userAnswer = a3\n            if (correctAns === userAnswer) {\n                points++\n            }\n        } \n\n        return (\n            <>\n            <Text style={styles.introText}>#{qNum} {item.prompt}</Text>\n            {item.choices.map((q, index) => {\n                let answerNum = index\n                // Multiple-Answer Question\n                if (qNum === 2) {\n                    return (\n                        <Text style={{fontSize: 18, paddingTop: 5,color: \"white\", textDecorationLine: (index != item.correct[0] && index != item.correct[1])? \"line-through\" : \"none\", textDecorationStyle: 'solid', \n                            textDecorationColor: 'red'}}>{++answerNum}. {q}</Text>\n                    )\n                }\n                return (\n                    <Text style={{fontSize: 18, paddingTop: 5,color: \"white\", textDecorationLine: index != item.correct? \"line-through\" : \"none\", textDecorationStyle: 'solid', \n                        textDecorationColor: 'red'}}>{++answerNum}. {q}</Text>\n                )\n            })}\n            <View style={styles.ansText}>\n                <Text style={styles.ansText}>{qNum != 2 ? `Correct Answer: ${++correctAns}`: `Correct Answer: ${++correctAns} or ${++correctAns2}`}</Text>\n            </View>\n            <View style={styles.ansText}>\n                <Text style={styles.ansText}>You Answered: {++userAnswer}</Text>\n            </View>\n            <View style={styles.ansText}>\n                <Text style={{fontSize: 20, paddingTop: 10, fontWeight: \"bold\", \n                color: correctAns === userAnswer || correctAns2 === userAnswer? \"#359c52\" : \"#fc0330\"}}>\n                {correctAns === userAnswer || correctAns2 === userAnswer? \"Correct! - 1/1 Points\" : \"Incorrect - 0/1 Points\"}</Text>\n            </View>\n            <View style={styles.container}>\n                <Text style={styles.scoreText}>{qNum === 3? `Quiz Score: ${points}/3` : ''}</Text>\n            </View>\n            </>\n        )\n    }\n    return (\n        <View style={styles.appContainer}>\n            <Text style={styles.titleText}>Summary</Text>\n            <FlatList data={questions} renderItem={renderAnswers} />\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n  appContainer: {\n    flex: 1,\n    backgroundColor: '#14151F',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#14151F',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  titleText: {\n    fontSize: 50,\n    color: \"white\",\n    fontWeight: 'bold',\n    padding: 15\n  },\n  introText: {\n    fontSize: 20,\n    paddingTop: 10,\n    color: \"#6A89FE\"\n  },\n  qText: {\n    fontSize: 18,\n    paddingTop: 5,\n    color: \"white\"\n  },\n  ansText: {\n    fontSize: 16,\n    color: \"white\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    paddingTop: 3\n  },\n  correctText: {\n    fontSize: 20,\n    paddingTop: 10,\n    fontWeight: \"bold\",\n    color: \"white\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n  },\n  scoreText: {\n    fontSize: 50,\n    color: \"#6A89FE\",\n    fontWeight: 'bold',\n    padding: 30\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}